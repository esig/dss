<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="classpath:/dss_applicationContext_soap.xml"/>
	<import resource="classpath:/dss_applicationContext_rest.xml"/>
	<import resource="classpath:/dss_validation_applicationContext_rest.xml"/>
	<import resource="classpath:/dss_validation_applicationContext_soap.xml"/>
    
    <context:annotation-config />
	<context:component-scan base-package="eu.europa.esig.dss" />

    <import resource="classpath:spring/applicationContext-core.xml"/>
    
    <context:property-placeholder location="classpath:dss.properties"/>
    
    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${datasource.driver.class}"/>
        <property name="url" value="${datasource.url}"/>
        <property name="username" value="${datasource.username}"/>
        <property name="password" value="${datasource.password}"/>
    </bean>
    
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:structure.sql"/>
        <jdbc:script location="classpath:load.sql"/>
    </jdbc:initialize-database>
    
    <!-- TSL Loader -->
	<bean id="tslRepository" class="eu.europa.esig.dss.tsl.service.TSLRepository">
		<property name="allowExpiredTSLs" value="false" />
		<property name="allowInvalidSignatures" value="false" />
		<property name="allowIndeterminateSignatures" value="false" />
		<property name="trustedListsCertificateSource" ref="trustedListSource" />
	</bean>
	
    <bean id="dssKeyStore" class="eu.europa.esig.dss.web.DSSKeyStoreFactoryBean">
	    <property name="keyStoreType" value="${dss.keystore.type}" />
	    <property name="keyStoreFilename" value="${dss.keystore.filename}" />
	    <property name="keyStorePassword" value="${dss.keystore.password}" />
	</bean>

	<bean id="tslValidationJob" class="eu.europa.esig.dss.tsl.service.TSLValidationJob">
		<property name="dataLoader" ref="dataLoader" />
		<property name="repository" ref="tslRepository" />
		<property name="lotlUrl" value="https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl-mp.xml" />
		<property name="lotlCode" value="EU" />
		<property name="ojUrl" value="${dss.oj.url}" />
		<property name="dssKeyStore" ref="dssKeyStore" />
		<property name="checkLOTLSignature" value="true" />
		<property name="checkTSLSignatures" value="true" />
	</bean>

	<bean id="tslValidationJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="tslValidationJob" />
		<property name="targetMethod" value="refresh" />
	</bean>

	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="tslValidationJobDetail" />
		<property name="startDelay" value="5000" />
		<property name="repeatInterval" value="300000" /> <!-- 5min -->
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy">
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean>
    
    <!-- /TSL Loader -->

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list merge="true">
                <value>classpath:i18n/application</value>
                <value>classpath:i18n/policy</value>
            </list>
        </property>
    </bean>

	<bean id="policyMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="packagesToScan">
			<list>
				<value>eu.europa.esig.jaxb.policy</value>
			</list>
		</property>

		<property name="marshallerProperties">
			<map>
				<entry>
					<key>
						<util:constant static-field="javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT" />
					</key>
					<value type="java.lang.Boolean">true</value>
				</entry>
			</map>
		</property>
	</bean>

</beans>